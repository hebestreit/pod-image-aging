apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "pod-image-aging.fullname" . }}
  labels:
    {{- include "pod-image-aging.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "pod-image-aging.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "pod-image-aging.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "pod-image-aging.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          args:
            - "--leader-elect"
            - "--health-probe-bind-address=:{{ .Values.service.port }}"
            - "--include-namespaces={{ .Values.includeNamespaces }}"
            - "--exclude-namespaces={{ .Values.excludeNamespaces }}"
            - "--include-images={{ .Values.includeImages }}"
            - "--exclude-images={{ .Values.excludeImages }}"
            - "--cache-expiration={{ .Values.cacheExpiry }}"
            - "--docker-auth-config-path={{ .Values.dockerAuthConfigPath }}"
            {{- if .Values.metrics.enabled }}
            - "--metrics-secure={{ .Values.metrics.secure }}"
            - "--metrics-bind-address=:{{ .Values.metrics.bindAddress }}"
            - "--metrics-interval={{ .Values.metrics.interval }}"
            {{- end }}
          ports:
            - name: http
              containerPort: {{ .Values.service.port }}
              protocol: TCP
            {{- if .Values.metrics.enabled }}
            - name: metrics
              containerPort: {{ .Values.metrics.bindAddress }}
              protocol: TCP
            {{- end }}
          livenessProbe:
            httpGet:
              path: /healthz
              port: http
            initialDelaySeconds: 15
            periodSeconds: 20
          readinessProbe:
            httpGet:
              path: /readyz
              port: http
            initialDelaySeconds: 5
            periodSeconds: 10
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          {{- if .Values.dockerAuthSecretName}}
          volumeMounts:
            - name: docker-auth
              mountPath: {{ .Values.dockerAuthConfigPath }}
              readOnly: true
              subPath: .dockerconfigjson
          {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      terminationGracePeriodSeconds: {{ .Values.terminationGracePeriodSeconds }}
      {{- if .Values.dockerAuthSecretName }}
      volumes:
        - name: docker-auth
          secret:
            secretName: {{ .Values.dockerAuthSecretName }}
      {{- end }}